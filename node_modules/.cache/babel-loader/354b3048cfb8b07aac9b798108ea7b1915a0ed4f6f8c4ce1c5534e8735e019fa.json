{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vivian/Desktop/today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/vivian/Desktop/today-i-learned/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/vivian/Desktop/today-i-learned/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vivian/Desktop/today-i-learned/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nvar GoTrueAdminApi = /*#__PURE__*/function (_signOut, _inviteUserByEmail, _generateLink, _createUser, _listUsers, _getUserById, _updateUserById, _deleteUser, _listFactors2, _deleteFactor2) {\n  function GoTrueAdminApi(_ref) {\n    var _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      fetch = _ref.fetch;\n    _classCallCheck(this, GoTrueAdminApi);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  _createClass(GoTrueAdminApi, [{\n    key: \"signOut\",\n    value: function signOut(_x) {\n      return (_signOut = _signOut || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwt) {\n        var scope,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              scope = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'global';\n              _context.prev = 1;\n              _context.next = 4;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/logout?scope=\").concat(scope), {\n                headers: this.headers,\n                jwt: jwt,\n                noResolveJson: true\n              });\n            case 4:\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: null\n              });\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              if (!isAuthError(_context.t0)) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: _context.t0\n              });\n            case 11:\n              throw _context.t0;\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 7]]);\n      }))).apply(this, arguments);\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n  }, {\n    key: \"inviteUserByEmail\",\n    value: function inviteUserByEmail(_x2) {\n      return (_inviteUserByEmail = _inviteUserByEmail || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(email) {\n        var options,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/invite\"), {\n                body: {\n                  email: email,\n                  data: options.data\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse\n              });\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              if (!isAuthError(_context2.t0)) {\n                _context2.next = 11;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context2.t0\n              });\n            case 11:\n              throw _context2.t0;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[1, 7]]);\n      }))).apply(this, arguments);\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n  }, {\n    key: \"generateLink\",\n    value: function generateLink(_x3) {\n      return (_generateLink = _generateLink || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {\n        var options, rest, body;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              options = params.options, rest = __rest(params, [\"options\"]);\n              body = Object.assign(Object.assign({}, rest), options);\n              if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n              }\n              _context3.next = 6;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/generate_link\"), {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n              });\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (!isAuthError(_context3.t0)) {\n                _context3.next = 13;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  properties: null,\n                  user: null\n                },\n                error: _context3.t0\n              });\n            case 13:\n              throw _context3.t0;\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }))).apply(this, arguments);\n    } // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"createUser\",\n    value: function createUser(_x4) {\n      return (_createUser = _createUser || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(attributes) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/users\"), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              if (!isAuthError(_context4.t0)) {\n                _context4.next = 10;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context4.t0\n              });\n            case 10:\n              throw _context4.t0;\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 6]]);\n      }))).apply(this, arguments);\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n  }, {\n    key: \"listUsers\",\n    value: function listUsers(_x5) {\n      return (_listUsers = _listUsers || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params) {\n        var _a, _b, _c, _d, _e, _f, _g, pagination, response, users, total, links;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              pagination = {\n                nextPage: null,\n                lastPage: 0,\n                total: 0\n              };\n              _context5.next = 4;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users\"), {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                  page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                  per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n                },\n                xform: _noResolveJsonResponse\n              });\n            case 4:\n              response = _context5.sent;\n              if (!response.error) {\n                _context5.next = 7;\n                break;\n              }\n              throw response.error;\n            case 7:\n              _context5.next = 9;\n              return response.json();\n            case 9:\n              users = _context5.sent;\n              total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n              links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n              if (links.length > 0) {\n                links.forEach(function (link) {\n                  var page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                  var rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                  pagination[\"\".concat(rel, \"Page\")] = page;\n                });\n                pagination.total = parseInt(total);\n              }\n              return _context5.abrupt(\"return\", {\n                data: Object.assign(Object.assign({}, users), pagination),\n                error: null\n              });\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](0);\n              if (!isAuthError(_context5.t0)) {\n                _context5.next = 20;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                data: {\n                  users: []\n                },\n                error: _context5.t0\n              });\n            case 20:\n              throw _context5.t0;\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 16]]);\n      }))).apply(this, arguments);\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"getUserById\",\n    value: function getUserById(_x6) {\n      return (_getUserById = _getUserById || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(uid) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (!isAuthError(_context6.t0)) {\n                _context6.next = 10;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context6.t0\n              });\n            case 10:\n              throw _context6.t0;\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 6]]);\n      }))).apply(this, arguments);\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"updateUserById\",\n    value: function updateUserById(_x7, _x8) {\n      return (_updateUserById = _updateUserById || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(uid, attributes) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _request(this.fetch, 'PUT', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              if (!isAuthError(_context7.t0)) {\n                _context7.next = 10;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context7.t0\n              });\n            case 10:\n              throw _context7.t0;\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 6]]);\n      }))).apply(this, arguments);\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(_x9) {\n      return (_deleteUser = _deleteUser || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id) {\n        var shouldSoftDelete,\n          _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              shouldSoftDelete = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : false;\n              _context8.prev = 1;\n              _context8.next = 4;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(id), {\n                headers: this.headers,\n                body: {\n                  should_soft_delete: shouldSoftDelete\n                },\n                xform: _userResponse\n              });\n            case 4:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](1);\n              if (!isAuthError(_context8.t0)) {\n                _context8.next = 11;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context8.t0\n              });\n            case 11:\n              throw _context8.t0;\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[1, 7]]);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"_listFactors\",\n    value: function _listFactors(_x10) {\n      return (_listFactors2 = _listFactors2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(params) {\n        var _yield$_request, data, error;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors\"), {\n                headers: this.headers,\n                xform: function xform(factors) {\n                  return {\n                    data: {\n                      factors: factors\n                    },\n                    error: null\n                  };\n                }\n              });\n            case 3:\n              _yield$_request = _context9.sent;\n              data = _yield$_request.data;\n              error = _yield$_request.error;\n              return _context9.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              if (!isAuthError(_context9.t0)) {\n                _context9.next = 13;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                data: null,\n                error: _context9.t0\n              });\n            case 13:\n              throw _context9.t0;\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 9]]);\n      }))).apply(this, arguments);\n    }\n  }, {\n    key: \"_deleteFactor\",\n    value: function _deleteFactor(_x11) {\n      return (_deleteFactor2 = _deleteFactor2 || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(params) {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors/\").concat(params.id), {\n                headers: this.headers\n              });\n            case 3:\n              data = _context10.sent;\n              return _context10.abrupt(\"return\", {\n                data: data,\n                error: null\n              });\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              if (!isAuthError(_context10.t0)) {\n                _context10.next = 11;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: null,\n                error: _context10.t0\n              });\n            case 11:\n              throw _context10.t0;\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[0, 7]]);\n      }))).apply(this, arguments);\n    }\n  }]);\n  return GoTrueAdminApi;\n}();\nexport { GoTrueAdminApi as default };","map":{"version":3,"names":["_generateLinkResponse","_noResolveJsonResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","_signOut","_inviteUserByEmail","_generateLink","_createUser","_listUsers","_getUserById","_updateUserById","_deleteUser","_listFactors2","_deleteFactor2","_ref","_ref$url","url","_ref$headers","headers","fetch","_classCallCheck","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","_createClass","key","value","signOut","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","jwt","scope","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","concat","noResolveJson","abrupt","data","error","t0","stop","apply","inviteUserByEmail","_x2","_callee2","email","options","_args2","_callee2$","_context2","body","redirectTo","xform","sent","user","generateLink","_x3","_callee3","params","rest","_callee3$","_context3","__rest","Object","assign","new_email","newEmail","properties","createUser","_x4","_callee4","attributes","_callee4$","_context4","listUsers","_x5","_callee5","_a","_b","_c","_d","_e","_f","_g","pagination","response","users","total","links","_callee5$","_context5","nextPage","lastPage","query","page","toString","per_page","perPage","json","get","split","forEach","link","parseInt","substring","rel","JSON","parse","getUserById","_x6","_callee6","uid","_callee6$","_context6","updateUserById","_x7","_x8","_callee7","_callee7$","_context7","deleteUser","_x9","_callee8","id","shouldSoftDelete","_args8","_callee8$","_context8","should_soft_delete","_x10","_callee9","_yield$_request","_callee9$","_context9","userId","factors","_x11","_callee10","_callee10$","_context10","default"],"sources":["/Users/vivian/Desktop/today-i-learned/node_modules/@supabase/gotrue-js/src/GoTrueAdminApi.ts"],"sourcesContent":["import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  async signOut(\n    jwt: string,\n    scope: 'global' | 'local' | 'others' = 'global'\n  ): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      /** A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column. */\n      data?: object\n\n      /** The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL. */\n      redirectTo?: string\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}